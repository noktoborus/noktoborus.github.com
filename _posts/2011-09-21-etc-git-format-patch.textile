---
layout: posts
date: 2011-09-21 21:00:43 +11:00
title: git format-patch && mutt
description: smtp git исправлений и сохранение их в mbox формате с помощью mutt
tags: etc git-format-patch mutt
---

Потребовалось с работы генерировать патчи для своих наработочек, делать @git push@ в сам репозитарий не всегда возможно, да и вообще, лениво, по этому решил разобраться с @git format-patch@ и @git am@.

@git format-patch@ создаёт заголовки для почты, сообщения, которые он генерирует, можно складывать в один контейнер формата mbox. @git am@ принимает на вход контейнер mbox и применяет патчи оттуда в текущий репозитарий.

Для удобства отправки есть @git imap-send@ и @git send-mail@, но, т.к. в ubuntu natty не было @git send-mail@ (вообще @git imap-send@ не был собран с поддержкой ssl, по этому пришлось избавиться от этой системы (но до этого пришлось настраивать stunnel >_<)) и было решено использовать @git imap-send@.

Используется это всё так:
в @$HOME/.gitconfig@ добавляются следующие строчки:

{% highlight cfg %}
[imap]
	folder = "INBOX"
	host = "imaps://imap.gmail.com"
	port = 993
	sslverify = false
	user = noktoborus@gmail.com
{% endhighlight %}

Где imaps:// указывает на то, что сервер использует ssl-капсуляцию для imap протокола, sslverify = false не разрашает выпадать при самоподписаном сертификате.

После чего мы смело можем заходить в наш каталог с изменённым кодом, коммитить его, а после сформировать и отправить почтовое сообщение с помощью последовательности @git format-patch --stdout <номер коммита> | git imap-send@, где <номер коммита> - хэш-сумма коммита, с которого начинаются генерироваться сообщения.

Теперь самое интересное: Как извлечь сообщения с почтового ящика и сформировать из них mbox?

Для mutt нашёл такой макрос:

{% highlight text %}
macro index , <tag-prefix-cond><save-message>~/tagged.mbox<enter> "Save tagged messages"
{% endhighlight %}

Теперь он умеет, при нажатии кнопки ",", сохранять все помеченные письма в @~/tagged.mbox@. Письма можно пометить клавишей "t". Теперь требуется перейти в каталог с репозитарием и применить патчи с помощью @git am ~/tagged.mbox@.

